---
export interface Props {
  id: string;
  align?: "prev" | "center" | "next";
  index?: number;
  perspective?: boolean;
}

import "@egjs/flicking/dist/flicking.css";
import "@egjs/flicking-plugins/dist/flicking-plugins.css";


---

<!-- Viewport element -->
<div data-init="false" data-perspective={Astro.props.perspective} data-index={Astro.props.index} data-align={Astro.props.align || "center"} id="carousel" class="flicking-viewport">
  <!-- Camera element -->
  <div class="flicking-camera">
    <!-- Panels, class names are your choice -->
    <slot />
  </div>
</div>

<script>
  import Flicking from "@egjs/flicking";
  import { Perspective } from "@egjs/flicking-plugins";

  // Prevent image drag
  document.querySelectorAll(".flicking-camera img").forEach(img => {
    img.setAttribute("draggable", "false");
  });

  const carouselReferences = document.querySelectorAll("#carousel[data-init='false']");

  for (const carousel of carouselReferences) {
    const align = carousel.getAttribute("data-align");
    const defaultIndex = carousel.getAttribute("data-index");
    const perspective = carousel.getAttribute("data-perspective");

    if (align) {
      const flicking = new Flicking(carousel as HTMLElement, {
        align: align,
        circular: true,
        defaultIndex: defaultIndex ? parseInt(defaultIndex) : 0,
        bound: true,
        autoResize: true,
        renderOnlyVisible: true,
      });


      if (perspective) {
        flicking.addPlugins(new Perspective({
          rotate: 0.1
        }));
      }
      
      carousel.setAttribute("data-init", "true");
      
    }
  }
</script>
